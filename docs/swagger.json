{
  "openapi": "3.0.0",
  "info": {
    "version": "1",
    "title": "wallet",
    "description": ""
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Endpoint to register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Log in user",
        "description": "Endpoint to log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the user"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "summary": "Log out user",
        "description": "Endpoint to log out a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged out"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Endpoint to retrieve user profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "Get all transactions",
        "description": "Endpoint to get all transactions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved"
          }
        }
      },
      "post": {
        "summary": "Create a new transaction",
        "description": "Endpoint to create a new transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "User ID (references the 'User' model)"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Transaction amount"
                  },
                  "category": {
                    "type": "string",
                    "description": "Transaction category",
                    "enum": ["category1", "category2"]
                  },
                  "date": {
                    "type": "string",
                    "description": "Transaction date"
                  },
                  "isIncome": {
                    "type": "boolean",
                    "description": "Indicates if the transaction is income"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Transaction comment"
                  }
                },
                "required": ["user", "amount", "category", "date", "isIncome"]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction created"
          }
        }
      }
    },
    "/transactions/{id}": {
      "delete": {
        "summary": "Delete a transaction",
        "description": "Endpoint to delete a transaction by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the transaction to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction deleted"
          }
        }
      },
      "patch": {
        "summary": "Update a transaction",
        "description": "Endpoint to update a transaction by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the transaction to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Updated transaction amount"
                  },
                  "category": {
                    "type": "string",
                    "description": "Updated transaction category"
                  },
                  "date": {
                    "type": "string",
                    "description": "Updated transaction date"
                  },
                  "isIncome": {
                    "type": "boolean",
                    "description": "Updated transaction type (income or expense)"
                  },
                  "comment": {
                    "type": "string",
                    "description": "Updated transaction comment"
                  }
                },
                "required": ["amount", "category", "date", "isIncome"]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction updated successfully"
          },
          "404": {
            "description": "Transaction not found"
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/transactions/{month}/{year}": {
      "get": {
        "summary": "Filter transactions by month and year",
        "description": "Endpoint to filter transactions by month and year",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "description": "Month for filtering transactions",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year for filtering transactions",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions filtered by month and year"
          }
        }
      }
    },
    "/transactions/categories/totals": {
      "get": {
        "summary": "Get category totals",
        "description": "Endpoint to get category totals",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Category totals retrieved"
          }
        }
      }
    },
    "/transactions/categories/{month}/{year}": {
      "get": {
        "summary": "Get filtered category totals",
        "description": "Endpoint to get filtered category totals by month and year",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "description": "Month for filtering category totals",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year for filtering category totals",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered category totals retrieved"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/wallet/"
    }
  ]
}
